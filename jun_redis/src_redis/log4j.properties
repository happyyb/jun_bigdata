# 记录调试等级以上的日志
# FATAL
# ERROR
# WARN
# INFO
# DEBUG
log4j.rootLogger = INFO, debugInfo
# 日志输出到终端
log4j.appender.debugInfo = org.apache.log4j.ConsoleAppender
# 日志输出到标准输出
log4j.appender.debugInfo.Target = System.out
# 日志输出到标准错误
#log4j.appender.debugInfo.Target = System.err
# 指定输出模式 PatternLayout 自定义输出
log4j.appender.debugInfo.layout = org.apache.log4j.PatternLayout
# 自定义输出样式
# 自定义输出样式
# %m   输出代码中指定的消息
# %p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
# %r   输出自应用启动到输出该log信息耗费的毫秒数 
# %c   输出所属的类目，通常就是所在类的全名 
# %t   输出产生该日志事件的线程名 
# %n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
# %d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921  
# %l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )
log4j.appender.debugInfo.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1} - %m%n
# 如果要加上行号可以写成 
#log4j.appender.debugInfo.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%l - %m%n